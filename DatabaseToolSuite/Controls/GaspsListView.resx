<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="organizationImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="organizationImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        CQAAAk1TRnQBSQFMAgEBAwEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AIwADIQEwAVoBVgFSAa8DQAFwAyEBMCAAAw0BEgNKAYoDMgFRKAADBAEG
        A1MBpQMcAScMAANuAf8DbgH/eAACOgE5AWABmgF5AU0B7wHfAcwBrAH/AdcBtwGOAf8BxAGOAU4B/wGR
        AWQBOAHvAVMBUQFOAZ8COgE5AWADFwEgEAADQAFvA2UB/wNkAfwDMQFOIAADBAEGA1kBtwNWAbQQAANu
        Af8DbgH/dAADOgFgAcsBnAFfAf8B2gHMAaYB/wHqAeMBzwH/AewB5gHUAf8B6QHiAcwB/wHGAZgBXgH/
        AcwBpQFuAf8BygGhAWgB/wG7AXsBOAH/AXUBVwE9Ad8CUQFOAZ8IAAMYASEDaAH5A2UB/wNiAfYDIQEw
        GAADBAEGA1YBtANoAfkDGgEkEAADbgH/A24B/3AAAk0BTAGPAdEBqgFyAf8B3wHYAbgB/wHdAdQBswH/
        Ae0B5wHWAf8B7wHqAdsB/wHsAeYB1AH/AagBUAEAAf8BrgFbAQwB/wG6AXABJwH/AdEBqQFxAf8B3AHQ
        AawB/wGxAWcBHQH/DAADRgF+A2UB/wNlAf8DYQHkAxQBGxAAAwQBBgNVAa4DZQH/A0gBhBQAA24B/wNu
        Af9wAAHVAa4BdwH/AeIB3gHCAf8B4AHbAb0B/wHeAdcBtwH/AfAB6wHcAf8B8gHuAeMB/wHvAeoB2wH/
        AacBTwEAAf8BrQFZAQkB/wG4AWwBIgH/AcsBmgFcAf8B3wHTAbMB/wG3AXMBLQH/EAADUwGlA2UB/wNl
        Af8DXQHSAwsBDwgAAwQBBgNVAa4DZQH/A10B0gMEAQYUAANuAf8DbgH/cAAB2wHAAZYB/wHjAeEByAH/
        AeEB2QG4Af8B4AHRAakB/wHyAe8B4wH/AfYB8wHqAf8B8gHuAeIB/wGnAU8BAAH/AasBVwEGAf8BtgFp
        AR0B/wHKAZgBWQH/AeIB1wG6Af8BugF4ATQB/xAAAwQBBgNWAbQDZQH/A2UB/wNbAcYDDQESAwQBBgNW
        AasDZQH/A2gB+QMhATAYAANuAf8DbgH/BAABVQFZAWoBwwMoATxkAAHdAcUBnAH/AdoB0wHCAf8BVQFQ
        AegB/wIJAv8BnAGaAfMB/wH5AfcB8QH/AfUB8gHpAf8BpwFPAQAB/wGqAVUBAwH/AbQBZQEZAf8ByQGW
        AVcB/wHlAdsBwQH/Ab0BgAE7Af8UAAMCAQMDTQGTA2UB/wNlAf8DXgHYA1oBwANlAf8DZQH/AzsBYxwA
        A24B/wNuAf8EAAEuAVEB1gH/AS4BUQHWAf8BVAFYAWYBwAMmATlcAAHMAbEBowH/AWkBaAH7Af8CQwL/
        AiQC/wIHAv8BnQGcAfoB/wH5AfYB8AH/AbsBdwE3Af8BqQFTAQEB/wGyAWIBFQH/AcsBmgFfAf8B6AHf
        AcgB/wGHAV8BigH/AVsBVQFXAb8YAAM4AV0DYQHzA2UB/wNlAf8DZQH/A1EBnCAAA24B/wNuAf8EAAEu
        AVEB1gH/AS4BUQHWAf8BLgFRAdYB/wEuAVEB1gH/AVMBVwFiAboDJgE5UAABcgFuAWwBzwKeAv8CgAL/
        Al8C/wJAAv8CIgL/AhUC/wHMAcsB+AH/AfMB7AHhAf8BwQGHAUgB/wHFAY8BUQH/AeoB4QHNAf8BsAGr
        AdwB/wIAAv8BZAFXAVYBzxgAAzEBTgNhAfMDZQH/A2UB/wNlAf8DMgFRIAADbgH/A24B/wQAAS4BUQHW
        Af8BLgFRAdYB/wEuAVEB1gH/AS4BUQHWAf8BLgFRAdYB/wEuAVEB1gH/AVUBVwFhAbcDJAE2SAAB1QG7
        AbAB/wK6Av8CnAL/AnoC/wJcAv8CPgL/Ah8C/wIUAv8BzAHLAfcB/wH4AfUB7wH/AfQB8QHnAf8BxAHA
        AeUB/wEMAQsB/QH/AVwBVQFkAc8DDAEQEAADCQEMA04BmQNlAf8DZQH/A2UB/wNeAcwDYQHhA2UB/wNK
        AYoDBAEGGAADbgH/A24B/wQAAS4BUQHWAf8BLgFRAdYB/wEuAVEB1gH/AS4BUQHWAf8BLgFRAdYB/wEu
        AVEB1gH/AS4BUQHWAf8BLgFRAdYB/wJEAUUBe0QAAyoBQAGjAZoBowHvArgC/wKZAv8CeAL/AloC/wI7
        Av8CHQL/AhIC/wHMAcsB9wH/AckBxwHxAf8CDAH9Af8BXAFWAWQBzwMMARAQAAMuAUgDYQHhA2UB/wNl
        Af8DZQH/A1YBqwMHAQkDBwEJA0gBhANiAfYDXgHMAxgBIRQAA24B/wNuAf8EAAEuAVEB1gH/AS4BUQHW
        Af8BLgFRAdYB/wEuAVEB1gH/AS4BUQHWAf8BLgFRAdYB/wFTAVgBbAHGAykBP0wAAyEBMAGjAZoBowHv
        ArUC/wKXAv8CdQL/AlcC/wI5Av8CGgL/AhEC/wINAf4B/wFdAVYBaAHPAwwBEBAAA0oBjQNlAf8DZQH/
        A2UB/wNlAf8DSQGHEAADFgEeA00BkwNjAeoDQwF4AwQBBgwAA24B/wNuAf8EAAEuAVEB1gH/AS4BUQHW
        Af8BLgFRAdYB/wEuAVEB1gH/AVUBWQFqAcMDKQE/WAADIQEwAaIBlwGjAe8CswL/ApUC/wJzAv8CVQL/
        AjYC/wEiAR8B8wH/AWABWAFoAc8DDAEQEAADAgEDA2IB9gNlAf8DZQH/A2EB1QMrAUIcAAMNARIDOwFj
        AxwBJwwAA24B/wNuAf8EAAEuAVEB1gH/AS4BUQHWAf8BVAFYAWYBwAMpAT9kAAMhATABogGTAZcB7wKx
        Av8BoAGTAdkB/wF1AWkBeQHfA1EBnwM6AWADDAEQGAADMQFOA1kBtwNAAW8DBAEGOAADbgH/A24B/wQA
        AVQBWAFmAcADKQE//wBhAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAG/wIA
        AfAB/wEfAfgB5wH/AgAB4AIPAfEB5wH/AgABwAEDAQcB4QHnAf8CAAGAAQMBgwHDAecB/wIAAYABAwHB
        AYMB5wH/AgABgAEDAcABBwHkAf8CAAGAAQMB4AEPAeQBPwIAAYABAQH4AR8B5AEPAwABAQH4AR8B5AED
        AwABAQHgAQcB5AEBAwABAwHAAQMB5AEDAgABgAEHAYEB4AHkAQ8CAAHAAQ8BAwH4AeQBPwIAAeABHwGH
        Af8B5AH/AgAG/wIACw==
</value>
  </data>
</root>