<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="organizationImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="organizationImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACs
        CQAAAk1TRnQBSQFMAgEBAwEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AIwADIQEwAV8BWAFPAa8BQQJAAXADIQEwIAADDQESA0sBigMyAVEoAAME
        AQYDVAGlAxwBJwwAA28B/wNvAf94AAI6ATkBYAGiAX0BTAHvAd8BzAGsAf8B1wG3AY4B/wHEAY4BTwH/
        AZcBZQEzAe8BVgFRAUwBnwI6ATkBYAMXASAQAANAAW8DZgH/A2UB/AMxAU4gAAMEAQYDWgG3A1gBtBAA
        A28B/wNvAf90AAM6AWABywGcAWAB/wHaAcwBpgH/AeoB4wHPAf8B7AHmAdQB/wHpAeIBzAH/AcYBmAFf
        Af8BzAGlAW8B/wHKAaEBaQH/AbsBfAE5Af8BfQFXATUB3wFVAVEBSwGfCAADGAEhA2gB+QNmAf8DYgH2
        AyEBMBgAAwQBBgNYAbQDaAH5AxoBJBAAA28B/wNvAf9wAAFPAU4BTAGPAdEBqgFzAf8B3wHYAbgB/wHd
        AdQBswH/Ae0B5wHWAf8B7wHqAdsB/wHsAeYB1AH/AagBUQEAAf8BrgFcAQ0B/wG6AXEBKAH/AdEBqQFy
        Af8B3AHQAawB/wGxAWgBHgH/DAADRgF+A2YB/wNmAf8DYgHkAxQBGxAAAwQBBgNXAa4DZgH/A0gBhBQA
        A28B/wNvAf9wAAHVAa4BeAH/AeIB3gHCAf8B4AHbAb0B/wHeAdcBtwH/AfAB6wHcAf8B8gHuAeMB/wHv
        AeoB2wH/AacBUAEAAf8BrQFaAQoB/wG4AW0BIwH/AcsBmgFdAf8B3wHTAbMB/wG3AXQBLgH/EAADVAGl
        A2YB/wNmAf8DXwHSAwsBDwgAAwQBBgNXAa4DZgH/A18B0gMEAQYUAANvAf8DbwH/cAAB2wHAAZYB/wHj
        AeEByAH/AeEB2QG4Af8B4AHRAakB/wHyAe8B4wH/AfYB8wHqAf8B8gHuAeIB/wGnAVABAAH/AasBWAEH
        Af8BtgFqAR4B/wHKAZgBWgH/AeIB1wG6Af8BugF5ATUB/xAAAwQBBgNYAbQDZgH/A2YB/wNdAcYDDQES
        AwQBBgNWAasDZgH/A2gB+QMhATAYAANvAf8DbwH/BAABUQFZAXQBwwMoATxkAAHdAcUBnAH/AdoB0wHC
        Af8BVgFRAegB/wIKAv8BnAGaAfMB/wH5AfcB8QH/AfUB8gHpAf8BpwFQAQAB/wGqAVYBBAH/AbQBZgEa
        Af8ByQGWAVgB/wHlAdsBwQH/Ab0BgAE8Af8UAAMCAQMDTgGTA2YB/wNmAf8DYAHYA1wBwANmAf8DZgH/
        AzsBYxwAA28B/wNvAf8EAAEvAVIB1gH/AS8BUgHWAf8BUQFYAW8BwAMmATlcAAHMAbEBowH/AWoBaQH7
        Af8CRAL/AiUC/wIIAv8BnQGcAfoB/wH5AfYB8AH/AbsBeAE4Af8BqQFUAQIB/wGyAWMBFgH/AcsBmgFg
        Af8B6AHfAcgB/wGHAWABigH/AV0BUgFXAb8YAAM4AV0DYwHzA2YB/wNmAf8DZgH/A1EBnCAAA28B/wNv
        Af8EAAEvAVIB1gH/AS8BUgHWAf8BLwFSAdYB/wEvAVIB1gH/AVEBVwFrAboDJgE5UAABfQF2AXIBzwKe
        Av8CgAL/AmAC/wJBAv8CIwL/AhYC/wHMAcsB+AH/AfMB7AHhAf8BwQGHAUkB/wHFAY8BUgH/AeoB4QHN
        Af8BsAGrAdwB/wIAAv8BaAFVAVMBzxgAAzEBTgNjAfMDZgH/A2YB/wNmAf8DMgFRIAADbwH/A28B/wQA
        AS8BUgHWAf8BLwFSAdYB/wEvAVIB1gH/AS8BUgHWAf8BLwFSAdYB/wEvAVIB1gH/AVIBVwFoAbcDJAE2
        SAAB1QG7AbAB/wK6Av8CnAL/AnsC/wJdAv8CPwL/AiAC/wIVAv8BzAHLAfcB/wH4AfUB7wH/AfQB8QHn
        Af8BxAHAAeUB/wENAQwB/QH/AVwBUQFoAc8DDAEQEAADCQEMA1ABmQNmAf8DZgH/A2YB/wNfAcwDYgHh
        A2YB/wNLAYoDBAEGGAADbwH/A28B/wQAAS8BUgHWAf8BLwFSAdYB/wEvAVIB1gH/AS8BUgHWAf8BLwFS
        AdYB/wEvAVIB1gH/AS8BUgHWAf8BLwFSAdYB/wJEAUYBe0QAAyoBQAGtAaIBrQHvArgC/wKZAv8CeQL/
        AlsC/wI8Av8CHgL/AhMC/wHMAcsB9wH/AckBxwHxAf8CDQH9Af8BXQFSAWkBzwMMARAQAAMuAUgDYgHh
        A2YB/wNmAf8DZgH/A1YBqwMHAQkDBwEJA0gBhANiAfYDXwHMAxgBIRQAA28B/wNvAf8EAAEvAVIB1gH/
        AS8BUgHWAf8BLwFSAdYB/wEvAVIB1gH/AS8BUgHWAf8BLwFSAdYB/wFQAVgBdgHGAykBP0wAAyEBMAGt
        AaIBrQHvArUC/wKXAv8CdgL/AlgC/wI6Av8CGwL/AhIC/wIOAf4B/wFfAVMBbAHPAwwBEBAAA0wBjQNm
        Af8DZgH/A2YB/wNmAf8DSQGHEAADFgEeA04BkwNkAeoDQwF4AwQBBgwAA28B/wNvAf8EAAEvAVIB1gH/
        AS8BUgHWAf8BLwFSAdYB/wEvAVIB1gH/AVEBWQF0AcMDKQE/WAADIQEwAawBnwGtAe8CswL/ApUC/wJ0
        Av8CVgL/AjcC/wEjASAB8wH/AWEBVgFuAc8DDAEQEAADAgEDA2IB9gNmAf8DZgH/A2IB1QMrAUIcAAMN
        ARIDOwFjAxwBJwwAA28B/wNvAf8EAAEvAVIB1gH/AS8BUgHWAf8BUQFYAW8BwAMpAT9kAAMhATABrAGb
        AZ8B7wKxAv8BoAGTAdkB/wF7AW4BgQHfAVUCUwGfAzoBYAMMARAYAAMxAU4DWgG3A0ABbwMEAQY4AANv
        Af8DbwH/BAABUQFYAW8BwAMpAT//AGEAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcA
        A/8BAAb/AgAB8AH/AR8B+AHnAf8CAAHgAg8B8QHnAf8CAAHAAQMBBwHhAecB/wIAAYABAwGDAcMB5wH/
        AgABgAEDAcEBgwHnAf8CAAGAAQMBwAEHAeQB/wIAAYABAwHgAQ8B5AE/AgABgAEBAfgBHwHkAQ8DAAEB
        AfgBHwHkAQMDAAEBAeABBwHkAQEDAAEDAcABAwHkAQMCAAGAAQcBgQHgAeQBDwIAAcABDwEDAfgB5AE/
        AgAB4AEfAYcB/wHkAf8CAAb/AgAL
</value>
  </data>
</root>